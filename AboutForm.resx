<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAB3AAAAuQAAAMcAAAClAAAATgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAA3gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAqgAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALwAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAAAA/gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWQAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAASgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABFAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAA1AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAADsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAZAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAC7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAABbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAD9AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPsAAACGAAAAFgAAAAAAAAAAAAAAAAAAABYAAAArAAAADgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AMAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA3gAAANIAAADoAAAA/gAA
        AP8AAAD7AAAAqgAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAWgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA3gAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFAAAA4gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD5AAAACQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADVAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAgAAAAAAAA
        AEYAAACRAAAAjgAAAEcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0AAAD9AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/AAA
        AAoAAABuAAAA/gAAAP8AAAD/AAAA/wAAALAAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADAAAAAAAAAAOAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABQAAAMMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAE4AAAAAAAAA4AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA6AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAANwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACtAAAAAAAAAAAAAACCAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAAOIAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAygAAAA0AAAAAAAAABgAAAAUAAACrAAAA/wAAAP8AAAD/AAAA/wAA
        AHoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAN0AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAK0AAAANAAAAFgAAANEAAAD9AAAAvAAAABsAAABGAAAAkAAA
        AJYAAABOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgAA
        ALIAAAD+AAAA/wAAAP8AAAD/AAAA/wAAANAAAABRAAAAAAAAAAAAAABwAAAA/wAAAP8AAAD/AAAAxAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACsAAABsAAAAfwAAAGkAAAAuAAAAAAAAAEkAAAB8AAAAKAAAAFkAAAD/AAAA/wAA
        AP8AAAD/AAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAFQAAAAAAAAAzAAAA/QAAAP8AAAD1AAAAOQAA
        AL8AAAD/AAAA/wAAAOAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARgAAAPsAAAD3AAAASwAAAFYAAAD/AAAA/wAA
        AP8AAACqAAAABQAAAFwAAAB4AAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACSAAAA/wAAAP8AAADOAAAAEwAA
        AO0AAAD/AAAA/wAAALEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAD/AAAA/wAA
        ANgAAAAAAAAANAAAAL0AAADGAAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AIsAAADQAAAATgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////+B////AH///wB///4Af//+AH///gB///4Af//+AH///wB///8Af
        ///AD///wAOP/+AAA//gAAH/4AAB//AAAP/wAACH+AAAAfwAAQH8AAEB/gADAf8AAgH/gAAD/8AYP//w
        QB///IAf//gAP//4A///+EP///h///////8=
</value>
  </data>
</root>